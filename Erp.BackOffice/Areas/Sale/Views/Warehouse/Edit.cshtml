@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model WarehouseViewModel

@{
    ViewBag.Title = Wording.PageEdit_Warehouse;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Warehouse",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    SelectList provinceList = Erp.BackOffice.Helpers.Common.GetSelectList_Location("0", null);
    SelectList districtList = Erp.BackOffice.Helpers.Common.GetSelectList_Location(Model.CityId, null);
    SelectList wardList = Erp.BackOffice.Helpers.Common.GetSelectList_Location(Model.DistrictId, null);
    List<string> listCategories = (List<string>)ViewBag.listCategories;
    IEnumerable<SelectListItem> branchList = (IEnumerable<SelectListItem>)ViewBag.branchList;
        
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Edit", "Warehouse", null, FormMethod.Post, new { @class = "form-horizontal clearfix" }))
{
    @Html.ValidationSummary(true)
    <input type="hidden" name="IsPopup" value="@Request["IsPopup"]" />
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    <div class="col-sm-6">
        @Html.CustomTextboxFor(model => model.Name, null, null, WidthType.span12)
        @Html.CustomTextboxFor(model => model.Code, null, null, WidthType.span12)
        @Html.CustomDropDownListFor(model => model.BranchId, branchList, WidthType.span12, true, "- Chọn -")
        @Html.CustomSwitchesFor(model => model.IsSale, SwitchesStyle.CheckboxStyle, true)
        @foreach (var item in Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_Category("Categories_product", null, null))
        {
            <div class="control-group form-group">
                <label class="control-label col-lg-5 col-md-4 col-sm-4" for="">@item.Text</label>
                <div class="control-value col-lg-7 col-md-8 col-sm-8" style="line-height:0px!important">
                    <label class="checkbox"><input type="checkbox" @(listCategories.Where(x=>x.ToString()==item.Value).Count()>0?"checked":"") class="ace" value="@item.Value" name="Categories" /> <span class="lbl"></span></label>
                </div>
            </div>
        }
        <div class="container-user-list" style="display:none">
        </div>
    </div>
    <div class="col-sm-6">
        @Html.CustomTextboxFor(model => model.Address, null, null, WidthType.span12)
        @Html.CustomDropDownListFor(model => model.CityId, provinceList, WidthType.span12)
        @Html.CustomDropDownListFor(model => model.DistrictId, districtList, WidthType.span12)
        @Html.CustomDropDownListFor(model => model.WardId, wardList, WidthType.span12)
        @Html.CustomTextAreaFor(model => model.Note, null, WidthType.span12)
    </div>

    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()

<script>
    var keeperId = ',@Model.KeeperId,';
    $(document).ready(function () {
        $('#BranchId').change(function () {
            $('.container-user-list').html('<h4>Người giữ kho:</h4><div></div>').show();

            if ($(this).val() != '') {
                $.getJSON('/Warehouse/GetListUserByBranchId', { branchId: $(this).val() }, function (res) {
                    if (res.length != 0) {
                        for (var i = 0 ; i < res.length; i++) {
                            var checked = keeperId != '' ? (keeperId.indexOf(',' + res[i].a + ',') != -1 ? 'checked' : '') : '';

                            var $user = $('<label class="col-md-4 col-sm-6 col-xs-6"><input type="checkbox" ' + checked + '  class="ace" id="KeeperId_' + res[i].a + '" name="KeeperId" value="' + res[i].a + '" /><span class="lbl">' + res[i].e + '</span></label>');
                            $('.container-user-list div').append($user);
                        }
                    } else {
                        $('.container-user-list').append('<p class="text-danger">Chi nhánh này không có nhân viên.</p>');
                    }
                });
            }
        });

        if ($('#BranchId').val() != '') {
            $('#BranchId').trigger('change');
        }

    });

    $(function () {
            var url = '/api/BackOfficeServiceAPI/FetchLocation';
            var districts = $('#DistrictId'); // cache it
            var ward = $('#WardId');

            $("#CityId").change(function () {
                var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
                $.getJSON(url, { parentId: id }, function (response) {
                    districts.empty(); // remove any existing options
                    ward.empty();
                    $(document.createElement('option'))
                            .attr('value', '')
                            .text('- Rỗng -')
                            .appendTo(ward);
                    $(response).each(function () {
                        $(document.createElement('option'))
                            .attr('value', this.Id)
                            .text(capitalizeFirstAllWords(this.Name.toLowerCase().replace('huyện', '').replace('quận', '')))
                            .appendTo(districts);
                    });

                    districts.trigger("chosen:updated");
                });
            });

            districts.change(function () {
                var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
                $.getJSON(url, { parentId: id }, function (response) {
                    ward.empty(); // remove any existing options
                    $(response).each(function () {
                        $(document.createElement('option'))
                            .attr('value', this.Id)
                            .text(capitalizeFirstAllWords(this.Name.toLowerCase()))
                            .appendTo(ward);
                    });
                    ward.trigger("chosen:updated");
                });
            });
        });
</script>
}
