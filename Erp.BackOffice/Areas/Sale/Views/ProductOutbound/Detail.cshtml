@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model ProductOutboundViewModel

@{
    ViewBag.Title = Wording.PageView_ProductOutbound;
    bool IsPopup = Request["IsPopup"] == null ? false : true;
    Layout = "~/Views/Shared/" + (IsPopup == false ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "ProductOutbound",
        ActionName = "Detail",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = IsPopup,
        DisplayBackButton = true,
        ActionBack = Model.Type == ProductOutboundType.Card ? "ListForCard" : null
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
    <style type="text/css">
        .mini-popup {
            position: relative;
            display: inline;
        }

        #popup_huy {
            position: absolute;
            bottom: 45px;
            left: 0px;
            width: 450px;
            height: 160px;
            max-width: inherit;
            top: inherit;
        }

        #popup_archive {
            position: absolute;
            bottom: 45px;
            left: 0px;
            width: 450px;
            height: 235px;
            max-width: inherit;
            top: inherit;
        }
    </style>
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{

}

@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @Html.Raw(ViewBag.FailedMessage)
    </div>
}

<div class="row">
    <div class="col-sm-7">
        <h4 class="green" style="margin-top:0px">
            <span>Phiếu xuất: @Model.Code (@Model.CreatedDate.Value.ToString("dd/MM/yyyy HH:mm"))</span>
            <span class="pull-right red"><b>@Common.PhanCachHangNgan(Model.TotalAmount)</b></span>
        </h4>
        @if (Model.IsDeleted == true)
        {
            <div class="alert alert-danger">
                <p><i class="ace-icon fa fa-warning red"></i> @Model.ModifiedUserName đã hủy bỏ chứng từ lúc @Model.ModifiedDate.Value.ToString("HH:mm dd/MM/yyyy").</p>
                <p>Lý do hủy: @Model.CancelReason</p>
            </div>
        }
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th style="width:5%">STT</th>
                        <th>Tên sản phẩm</th>
                        <th width="100">Số lượng</th>
                        <th width="100">Đơn giá</th>
                        <th width="100">Thành tiền</th>
                    </tr>
                </thead>
                <tbody id="detailList">
                    @foreach (var detail in Model.DetailList)
                    {
                        var index = Model.DetailList.IndexOf(detail);
                        <tr>
                            <td>@(index + 1)</td>
                            <td>@detail.ProductCode - @detail.ProductName</td>
                            <td align="right">@Common.PhanCachHangNgan(detail.Quantity)</td>
                            <td class="detail_item_price">@Erp.BackOffice.Helpers.Common.PhanCachHangNgan(detail.Price)</td>
                            <td class="detail_item_total">@Erp.BackOffice.Helpers.Common.PhanCachHangNgan(detail.Price * detail.Quantity)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-sm-5">
        <div class="tabbable">
            <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="tabCustomer">
                <li class="active">
                    <a data-toggle="tab" href="#tab1">Thông tin chi tiết</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="detail-view">
                    <div class="row control-group">
                        @Html.DetailViewItemDateTimeFor(m => m.ModifiedDate, true, null, null, "col-xs-4", "col-xs-8")
                    </div>
                    <div class="row control-group">
                        @Html.DetailViewItemFor2(m => m.WarehouseSourceName, true, null, null, "col-xs-4", "col-xs-8")
                    </div>
                    <div class="row control-group">
                        @Html.DetailViewItemFor2(m => m.Note, null, null, "col-xs-4", "col-xs-8")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.IsDeleted == false)
{
    using (Html.BeginButtonContainer(pageSetting))
    {
        if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Print", "ProductOutbound", "Sale"))
        {
            <a href="@Url.Action("Print", new { Id = Model.Id })" target="_blank" class="btn btn-primary btn-white btn-sm"><i class="fa fa-print"></i> In phiếu</a>
            <a class="btn btn-white btn-success btn-sm" href="@Url.Action("Print", new { id = Model.Id, ExportExcel = true })">
                <i class="ace-icon fa fa-file-excel-o"></i>
                Xuất excel
            </a>
        }
        if (Model.AllowEdit)
        {
            if (!Model.IsArchive)
            {
                if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Archive", "ProductOutbound", "Sale"))
                {
                    using (Html.BeginForm("Archive", pageSetting.ModuleName, FormMethod.Post, new { @class = "inline" }))
                    {
                        @Html.HiddenFor(m => m.Id)
                        <button class="btn btn-mini btn-success" type="submit" name="Submit" value="Save">
                            <i class="ace-icon fa fa-save"></i>
                            Ghi sổ
                        </button>
                    }


                    <div class="mini-popup">
                        <a class="btn btn-white btn-sm no-border" data-toggle="collapse" data-target="#popup_huy" style="color: red !important;">
                            <i class="ace-icon fa fa-trash"></i>
                            Hủy phiếu
                        </a>
                        <div id="popup_huy" class="popover fade top">
                            <div class="arrow" style="left: 50%;"></div>
                            <h3 class="popover-title"><i class="ace-icon fa fa-bolt red"></i> Hủy phiếu</h3>
                            <div class="popover-content">
                                @using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Delete", pageSetting.ModuleName, null, FormMethod.Post, new { id = "ProductOutbound_Delete", @class = "form-horizontal clearfix" }))
                                {
                                    @Html.HiddenFor(m => m.Id)
                                    @Html.CustomTextAreaFor(model => model.CancelReason, Wording.Note, WidthType.span12)

                                    <p class="top-10">
                                        <button id="btnDelete" class="btn btn-mini btn-primary" type="submit" name="Submit" value="Delete" onclick="return submitDelete();">
                                            Đồng ý
                                        </button>
                                        <a class="btn btn-white btn-sm no-border" data-toggle="collapse" data-target="#popup_huy">Đóng</a>
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("UnArchive", "ProductOutbound", "Sale"))
                {
                    using (Html.BeginForm("UnArchive", pageSetting.ModuleName, FormMethod.Post, new { @class = "inline" }))
                    {
                        @Html.HiddenFor(m => m.Id)
                        <button class="btn btn-white btn-danger btn-sm no-border" type="submit" name="Submit" value="Save" onclick="return confirm('Bạn chắc chắn muốn thực hiện thao tác này?')">
                            Bỏ ghi sổ
                        </button>
                    }
                }
            }
        }
    }
}
@section Scripts {

    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()

    <script type="text/javascript">
        $(document).ready(function ()
        {
            //định dạng tiền tệ
            $('#TotalAmount').numberFormat();

            //$('.input-edit-inline').editInlineInput({id:@Model.Id, url:'/ProductOutbound/EditInline', disabled: true});
        });

        function submitDelete()
        {
            if (confirm('Bạn chắc chắn muốn thực hiện thao tác này?'))
            {
                if ($("#CancelReason").val() == '')
                {
                    alert("Vui lòng nhập lý do hủy!");
                    $("#CancelReason").focus();
                    return false;
                }

                return true;
            }

            return false;
        }
    </script>
}
