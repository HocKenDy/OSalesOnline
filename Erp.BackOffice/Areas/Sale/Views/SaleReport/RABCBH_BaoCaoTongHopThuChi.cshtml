@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers

@{
    ViewBag.Title = "Báo cáo tổng hợp thu chi";
    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "SaleReport",
        ActionName = "RABCBH_BaoCaoTongHopThuChi",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false,
        SearchButtonText = "Xem báo cáo"
    };

    IEnumerable<SelectListItem> branchList = (IEnumerable<SelectListItem>)ViewBag.branchList;
    DateTime aDateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    // Cộng thêm 1 tháng và trừ đi một ngày.
    DateTime retDateTime = aDateTime.AddMonths(1).AddDays(-1);
}

@section HeadOfPage {


    <style type="text/css">
        .cell-center {
            text-align: center;
        }

        .tr-bold {
            font-weight: 700;
        }

        .ctl {
            position: relative;
            /*float: left;*/
            margin-right:3px;
        }

            .ctl .error {
                position: absolute;
                background: #de2a2a;
                left: 0px;
                top: 28px;
                padding: 2px 5px;
                color: #fff;
                z-index: 999;
            }

                .ctl .error:before {
                    border-bottom: 7px solid #de2a2a;
                    border-left: 7px solid transparent;
                    border-right: 7px solid transparent;
                    left: 9px;
                    top: -6px;
                    content: "";
                    display: inline-block;
                    position: absolute;
                }

        .icon-add {
            margin-top: 0px !important;
        }
        .combojax {
            display: inline-block;
            position: initial !important;
            float: none !important;
        }
    </style>

    <script type="text/javascript">
        var exportThis = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,',
                template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel"  xmlns="http://www.w3.org/TR/REC-html40"><head> <!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets> <x:ExcelWorksheet><x:Name>{worksheet}</x:Name> <x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions> </x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook> </xml><![endif]--></head><body> <table>{table}</table></body></html>',
                base64 = function (s) {
                    return window.btoa(unescape(encodeURIComponent(s)))
                },
                format = function (s, c) {
                    return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; })
                }
            return function () {
                var ctx = { worksheet: '@ViewBag.Title' || 'Worksheet', table: document.getElementById("cTable").innerHTML }
                window.location.href = uri + base64(format(template, ctx))
            }
        })()

        var exportThisWithParameter = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,',
                template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel"  xmlns="http://www.w3.org/TR/REC-html40"><head> <!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets> <x:ExcelWorksheet><x:Name>{worksheet}</x:Name> <x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions> </x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook> </xml><![endif]--></head><body> <table>{table}</table></body></html>',
                base64 = function (s) {
                    return window.btoa(unescape(encodeURIComponent(s)))
                },
                format = function (s, c) {
                    return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; })
                }
            return function (tableID, excelName) {
                tableID = document.getElementById(tableID)
                var ctx = { worksheet: excelName || 'Worksheet', table: tableID.innerHTML }
                window.location.href = uri + base64(format(template, ctx))
            }
        })()
    </script>

}

<div id="page_header" class="widget-box">
    <div class="widget-header">
        <h5 class="widget-title">
            <i class="ace-icon fa fa-star orange"></i>
            @ViewBag.Title
        </h5>
        <div class="widget-toolbar">
            <a class="btn-search" href="#" data-action="collapse">
                <i class="ace-icon fa fa-search blue"></i>
            </a>
            <a class="btn-setting"></a>
        </div>
    </div>

    <div class="widget-body" style="display: block;">
        <div class="widget-main">
            <div class="search-view form-inline" id="SaleReport">
                <p>
                    <span class="ctl inline">
                        <select class="form-control" name="Category" id="Category">
                            <option value="all">- Tất cả chứng từ -</option>
                            <option value="receipt">Phiếu thu</option>
                            <option value="payment">Phiếu chi</option>
                        </select>
                    </span>
                    @*@Html.DropDownList("Name", new List<SelectListItem> { new SelectListItem { Text = "- Khoản mục -", Value = "" } })*@
                    @*<span class="ctl inline">
                        @Html.TextBox("Name", "", new { placeholder = "Khoản mục", autocomplete = "off" })
                    </span>*@
                    <span class="ctl inline">
                        @Html.DropDownList("PaymentMethod", SelectListHelper.GetSelectList_Category("FormPayment", null, "- Hình thức thanh toán -"))
                    </span>
                    <span class="ctl inline">
                        <select class="form-control" name="SalerId" id="SalerId">
                            <option value="">- Nhân viên -</option>
                            @foreach (var item in SelectListHelper.GetSelectList_FullUserName(null, null))
                            {
                                <option @(Request["SalerId"] == item.Value ? "Selected" : "") value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </span>
                </p>
                <p>
                    <span class="ctl inline">
                        @Html.TextBox("Code", Request["Code"], new { autocomplete = "off", placeholder = "Mã chứng từ..." })
                    </span>
                    @*<span class="ctl inline">
                        @Html.TextBox("Phone", Request["Phone"], new { autocomplete = "off", placeholder = "Số điện thoại.." })
                    </span>*@
                    @*<span class="ctl inline">
                        <input type="hidden" name="CustomerId" id="CustomerId" />
                        @Html.TextBox("CustomerName", "", new { placeholder = "Khách hàng/NCC...", autocomplete = "off" })
                    </span>*@
                    <span class="ctl inline">
                        <span class=" inline">
                        <span class="input-daterange input-group">
                            @Html.TextBox("start", Request["start"] != null ? Request["start"] : aDateTime.ToString("dd/MM/yyyy"), new { autocomplete = "off", placeholder = "Từ ngày" })
                            <span class="input-group-addon">
                                <i class="fa fa-exchange"></i>
                            </span>
                            @Html.TextBox("end", Request["end"] != null ? Request["end"] : retDateTime.ToString("dd/MM/yyyy"), new { autocomplete = "off", placeholder = "Đến ngày" })
                        </span>
                    </span>
                    </span>
                </p>

                <p style="margin:0px;">
                    <button class="btn btn-mini btn-primary" name="search" onclick="searchreact()" type="submit" value="Search">
                        Xem báo cáo
                    </button>
                </p>
            </div>
        </div>
    </div>
</div>

<div class="row" style="padding-top: 5px;">
    <div class="col-xs-12">
        <div id="react_report" class="table-responsive">

        </div>
    </div>
</div>

@using (Html.BeginButtonContainer(pageSetting))
{
    <button class="btn btn-white btn-success btn-sm" type="button" value="Export" onclick="exportThis()">
        <i class="ace-icon fa fa-file-excel-o"></i>
        Xuất excel
    </button>

}

@section Scripts {
    @*@Html.ReactInitJavaScript()*@
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/MM/yyyy")
    @*<script src="/Scripts/combojax.js"></script>
    <link href="/assets/css/combojax.css" rel="stylesheet" />*@
    <script src="~/Scripts/cmreactjs/rc_bcTongHopThuChi.jsx"></script>
    <script>
        searchreact();
        function searchreact() {
            GetDatatable('/api/BackOfficeServiceAPI/GetList_BCTongHopThuChi', '@Html.Raw(ViewBag.Title)');
        }
    </script>
}