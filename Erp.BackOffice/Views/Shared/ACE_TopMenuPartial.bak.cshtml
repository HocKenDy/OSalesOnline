@model IEnumerable<Erp.BackOffice.Areas.Administration.Models.PageMenuViewModel>

@using Erp.BackOffice.Areas.Administration.Models;
@*@using Erp.Domain.Staff.Repositories;*@
@using Erp.BackOffice.App_GlobalResources;
@{
    if (Model == null)
    {
        return;
    }

    int IdMenuItem = 0;
    if (ViewBag.IdMenuItem != null)
    {
        IdMenuItem = (int)ViewBag.IdMenuItem;
    }
    int idMenuParent = IdMenuItem;
    IEnumerable<Erp.BackOffice.Areas.Administration.Models.PageMenuViewModel> Parent = null;

    List<int> idParentsActiveOpen = new List<int>();

    if (Model != null)
    {
        int idParent = idMenuParent;
        while (idParent > 0)
        {
            var item = Model.Where(p => p.Id == idParent).FirstOrDefault();

            var parentItem = item != null && item.ParentId.HasValue ? Model.Where(p => p.Id == item.ParentId.Value).FirstOrDefault() : null;
            if (parentItem != null)
            {
                idParentsActiveOpen.Add(parentItem.Id);
                idParent = parentItem.Id;
                idMenuParent = idParent;
            }
            else
            {
                idParent = 0;
            }
        }

    }
}
<style>
    .badge, .badge-red.label {
        font-weight: 400;
        background-color: #fa3e3e;
        text-shadow: none;
        position: absolute !important;
        right: 0px;
        font-size: 10px;
        padding: 1px;
    }

    .button__badgeStaff {
        background-color: #fa3e3e;
        border-radius: 2px;
        color: white;
        padding: 1px 3px;
        font-size: 10px;
        position: absolute; /* Position the badge within the relatively positioned button */
        top: 5px;
        right: 10px;
        height: 17px;
        line-height: 15px;
    }
</style>

@*<div class="collapse navbar-collapse" id="topmenu">
        <ul class="nav navbar-nav">
            @foreach (var item in Model.Where(p => p.ParentId == null && p.PageUrl != "/Home/Index").OrderBy(item => item.OrderNo))
            {
                var subList = Model.Where(p => p.ParentId == item.Id).OrderBy(i => i.OrderNo).ToList();
                var hasSubList = subList != null && subList.Count > 0;

                if (hasSubList)
                {
                    var url = item.PageUrl;
                    if (item.PageId == null)
                    {
                        url = item.Url;
                    }

                    var cssClassActiveOpen = "";
                    if (item.Id == idMenuParent)
                    {
                        cssClassActiveOpen = "active";
                    }

                    <li>
                        <a class="@cssClassActiveOpen" href="@url">
                            @item.Name
                        </a>
                    </li>
                }
            }
        </ul>
    </div>*@

<div class="collapse navbar-collapse" id="topmenu">
    <ul class="nav navbar-nav">
        @foreach (var item in Model.Where(p => p.ParentId == null && p.PageUrl != "/Home/Index").OrderBy(item => item.OrderNo))
        {
            var subList = Model.Where(p => p.ParentId == item.Id).OrderBy(i => i.OrderNo).ToList();
            var hasSubList = subList != null && subList.Count > 0;

            //if (hasSubList)
            //{
                var url = item.PageUrl;
                if (item.PageId == null)
                {
                    url = item.Url;
                }

                var cssClassActiveOpen = "";
                if (item.Id == idMenuParent)
                {
                    cssClassActiveOpen = "active";
                }

                <li>
                    @if (hasSubList)
                    {

                        <a class="@cssClassActiveOpen dropdown-toggle" href="@url" data-toggle="dropdown" aria-expanded="true">
                            @item.Name
                            <i class="ace-icon fa fa-caret-down"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-caret dropdown-close">
                            @foreach (var subItem in subList)
                            {
                                var url2 = subItem.PageUrl;
                                if (subItem.PageId == null)
                                {
                                    url2 = subItem.Url;
                                }
                                <li>
                                    <a href="@url2" class="no-radius">
                                        <i class="@subItem.CssClassIcon" style="width: 20px; margin-right: 0px;"></i>
                                        @subItem.Name
                                    </a>

                                    @{var subList3 = Model.Where(p => p.ParentId == subItem.Id).OrderBy(i => i.OrderNo).ToList();
                                    var hasSubList3 = subList3 != null && subList3.Count > 0;

                                    if (hasSubList3)
                                    {
                                        <ul>
                                            @foreach (var subItem3 in subList3)
                                            {
                                                var url3 = subItem3.PageUrl;
                                                if (subItem3.PageId == null)
                                                {
                                                    url3 = subItem3.Url;
                                                }
                                                <li>
                                                    <a href="@url3" class="no-radius">
                                                        @subItem3.Name
                                                    </a>

                                                </li>
                                            }
                                        </ul>
                                    }}
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <a class="@cssClassActiveOpen" href="@url">
                            @item.Name
                        </a>
                    }
                </li>
            //}
        }
    </ul>
</div>
